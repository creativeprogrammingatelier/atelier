{"ast":null,"code":"var _jsxFileName = \"/home/andrew/git/atelier-core/client/src/StudentView.jsx\";\nimport React, { Component } from \"react\";\nimport FileUploader from 'react-firebase-file-uploader';\nimport firebase from './firebase.js';\nimport PDEReader from './lib/PDEReader';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { faEye } from '@fortawesome/free-solid-svg-icons';\nlibrary.add(faEye);\n\nclass StudentView extends Component {\n  constructor(props) {\n    super(props);\n    this.storageRef = firebase.storage().ref('code');\n    this.dbRef = firebase.firestore().collection('codeFileRefs');\n\n    this.handleUploadStart = () => {\n      this.setState({\n        progress: 0\n      });\n    };\n\n    this.handleProgress = progress => this.setState({\n      progress\n    });\n\n    this.handleUploadError = error => {\n      this.setState({\n        isUploading: false\n      });\n      console.error(error);\n    };\n\n    this.handleUploadSuccess = filename => {\n      this.setState({\n        filename: filename,\n        progress: 100\n      });\n      this.storageRef.child(filename).getDownloadURL().then(url => {\n        this.setState({\n          fileURL: url\n        });\n        this.dbRef.add({\n          filename: filename,\n          fileURL: url\n        });\n      });\n    };\n\n    this.handleLinkClick = (e, fileURL) => {\n      this.setState({\n        viewedFileURL: fileURL\n      });\n    };\n\n    this.state = {\n      file: '',\n      fileURL: '',\n      progress: 0,\n      items: [],\n      viewedFileURL: '' // This binding is necessary to make `this` work in the callback\n\n    };\n    this.handleLinkClick = this.handleLinkClick.bind(this);\n  }\n\n  componentWillMount() {\n    this.dbRef.onSnapshot(querySnapshot => {\n      var items = querySnapshot.docs.map(function (documentSnapshot) {\n        return documentSnapshot.data();\n      });\n      const newState = [];\n\n      for (let item in items) {\n        newState.push({\n          id: item,\n          title: items[item].filename,\n          fileURL: items[item].fileURL\n        });\n      }\n\n      this.setState({\n        items: newState\n      });\n    });\n  }\n\n  render() {\n    console.log(this.state);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"Welcome, student\"), React.createElement(\"label\", {\n      style: {\n        padding: 10,\n        borderRadius: 4,\n        pointer: 'cursor'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(FileUploader, {\n      name: \"file\",\n      storageRef: this.storageRef,\n      onUploadStart: this.handleUploadStart,\n      onUploadSuccess: this.handleUploadSuccess,\n      onUploadError: this.handleUploadError,\n      onProgress: this.handleProgress,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }), \" \"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      className: \"table table-striped\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"File name\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"Download\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"View\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, this.state.items.map((item, index) => {\n      return React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, item.title), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: item.fileURL,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, \"Download link\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(FontAwesomeIcon, {\n        icon: \"eye\",\n        onClick: e => this.handleLinkClick(e, item.fileURL),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      })));\n    })))), React.createElement(PDEReader, {\n      file: this.state.viewedFileURL,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default StudentView;","map":{"version":3,"sources":["/home/andrew/git/atelier-core/client/src/StudentView.jsx"],"names":["React","Component","FileUploader","firebase","PDEReader","FontAwesomeIcon","library","faEye","add","StudentView","constructor","props","storageRef","storage","ref","dbRef","firestore","collection","handleUploadStart","setState","progress","handleProgress","handleUploadError","error","isUploading","console","handleUploadSuccess","filename","child","getDownloadURL","then","url","fileURL","handleLinkClick","e","viewedFileURL","state","file","items","bind","componentWillMount","onSnapshot","querySnapshot","docs","map","documentSnapshot","data","newState","item","push","id","title","render","log","padding","borderRadius","pointer","index"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport FileUploader from 'react-firebase-file-uploader'\nimport firebase from './firebase.js'\nimport PDEReader from './lib/PDEReader'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { faEye } from '@fortawesome/free-solid-svg-icons'\nlibrary.add(faEye)\n\nclass StudentView extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            file: '',\n            fileURL: '',\n            progress: 0,\n            items: [],\n            viewedFileURL: ''\n        }\n\n        // This binding is necessary to make `this` work in the callback\n        this.handleLinkClick = this.handleLinkClick.bind(this);\n    }\n\n    storageRef = firebase.storage().ref('code');\n    dbRef = firebase.firestore().collection('codeFileRefs')\n\n    componentWillMount() {\n        this.dbRef.onSnapshot(querySnapshot => {\n            var items = querySnapshot.docs.map(function (documentSnapshot) {\n                return documentSnapshot.data();\n            });\n            const newState = [];\n            for (let item in items) {\n                newState.push({\n                    id: item,\n                    title: items[item].filename,\n                    fileURL: items[item].fileURL\n                });\n            }\n            this.setState({\n                items: newState,\n            })\n        });\n\n    }\n\n    handleUploadStart = () => {\n        this.setState({\n            progress: 0\n        })\n    }\n\n    handleProgress = progress => this.setState({ progress });\n\n    handleUploadError = error => {\n        this.setState({ isUploading: false });\n        console.error(error);\n    };\n\n    handleUploadSuccess = filename => {\n        this.setState({\n            filename: filename,\n            progress: 100\n        })\n        this.storageRef.child(filename).getDownloadURL()\n            .then(url => {\n                this.setState({\n                    fileURL: url\n                })\n                this.dbRef.add({\n                    filename: filename,\n                    fileURL: url\n                })\n            })\n    }\n\n    handleLinkClick = (e, fileURL) => {\n        this.setState({\n            viewedFileURL: fileURL,\n        })\n    }\n\n    render() {\n        console.log(this.state)\n        return (\n            <div>\n                <h2>Welcome, student</h2>\n                <label style={{ padding: 10, borderRadius: 4, pointer: 'cursor' }}>\n                    <FileUploader\n                        name='file'\n                        storageRef={this.storageRef}\n                        onUploadStart={this.handleUploadStart}\n                        onUploadSuccess={this.handleUploadSuccess}\n                        onUploadError={this.handleUploadError}\n                        onProgress={this.handleProgress}\n                    /> </label>\n\n                <div>\n                    <table className=\"table table-striped\">\n                        <thead>\n                            <tr>\n                                <th scope=\"col\">File name</th>\n                                <th scope=\"col\">Download</th>\n                                <th scope=\"col\">View</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {this.state.items.map((item, index) => {\n                                return (\n                                    <tr>\n                                        <td>{item.title}</td>\n                                        <td><a href={item.fileURL}>Download link</a></td>\n                                        <td><FontAwesomeIcon icon=\"eye\" onClick={(e) => this.handleLinkClick(e, item.fileURL)} /></td>\n                                    </tr>)\n                            })}\n                        </tbody>\n                    </table>\n\n                </div>\n\n                <PDEReader file={this.state.viewedFileURL} />\n\n            </div>\n        )\n    }\n}\n\nexport default StudentView;"]},"metadata":{},"sourceType":"module"}