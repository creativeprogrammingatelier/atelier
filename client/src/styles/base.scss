@import "./variabes.scss";
@import "~bootstrap/scss/bootstrap.scss";

// Default element styles
* {
	overflow-wrap: break-word;
}
html, body {
	background-color: $colorBackground;
}
a {
	color: $colorWhite;
}
p a {
	color: $colorPrimary;
}
p a:hover {
	color: $colorSecondary;
}
button:focus {
	outline: none;
}
thead {
	padding: 1rem;
	color: $colorWhite;
	background-color: $colorPrimary;
}
tbody {
	tr:nth-child(even) {
		background-color: $colorOffWhite;
	}
}
form:last-child {
	margin-bottom: 0;
}
textarea {
	width: 100%;
	vertical-align: top;
	background-color: transparent;
	border: none;
	resize: none;
}
textarea:focus, textarea:active {
	outline: none;
}

// Custom generic use classes
.round {
	border-radius: 100vw;
}
.transparent {
	background: transparent;
}
.restricted {
	.btn:not(:disabled):not(.disabled) {
		background-color: $colorRestricted;
	}

	.btn:not(:disabled):not(.disabled):hover, .btn:not(:disabled):not(.disabled):active {
		background-color: $colorRestrictedAlternate;
	}

	.buttonBar {
		background-color: $colorRestricted;
	}
}
.restricted.block {
	border-color: $colorRestricted;
}

.floater {
	position: sticky;
	z-index: 1040;

	.btn {
		min-width: inherit;
		min-height: inherit;
	}
}
.floater > * {
	box-shadow: $shadowMedium;
}

.label {
	margin: 0;
	padding: 0.25rem 0.5rem;
	display: inline-block;
	color: $colorWhite;
	background-color: $colorSecondary;
}

// Custom larger content containers
.content {
	//margin-top: $headerHeight;
}
.contentPage {
	min-height: 100vh;
	display: flex;
	flex-flow: column;
}
.contentTab {
	//padding-bottom: calc(28px + 1rem);
	flex: 1 1 auto;
}

// Custom generic use content containers
.area {
	background-color: $colorWhite;
}
.block {
	border-left: 0.5rem solid $colorPrimary;
}
.panel {
	width: 20rem;
	max-width: 100%;
	margin: 0;
	position: relative;
	display: inline-block;
	background-color: $colorPrimary;
	color: $colorWhite;

	a {
		color: $colorWhite;
	}

	.panelText {
		min-height: 7rem;
		padding: 0.5rem;

		h1, h2, h3, h4, h5, h6 {
			margin: 0 0.5rem;
			font-weight: 300;
		}
	}

	.panelBottom {
		width: 100%;
		padding: 0.5rem 1rem;
		background-color: $colorSecondary;
	}
}
.panel:hover {
	a {
		text-decoration: none;
		//color: $colorOffWhite;
	}

	.panelBottom {
		background: $gradientSecondary;
		box-shadow: $shadowSmallUp;
	}
}
.panel:not(:last-child) {
	margin: 0 1rem 1rem 0;
}

.dataItem, .dataBlock, .dataToggle {
	a {
		color: unset;
	}

	a:hover {
		text-decoration: none;
	}

	.toast {
		max-width: unset;
		box-shadow: none;
	}
}
.dataItem:hover, .dataBlock:hover {
	a {
		.toast {
			box-shadow: $shadowMedium;
		}
	}
}
.dataToggle:hover {
	box-shadow: $shadowMedium;
}
.dataItem:not(:last-child), .dataBlock:not(:last-child), .dataToggle:not(:last-child) {
	margin-bottom: 0.5rem;
}

// Bootstrap navigation bars (headers)
.navbar {
	//width: 100%;
	height: $headerHeight;
	margin: 0 !important;
	background-color: $colorPrimary;
	//background: $gradientHorizontal;

	h1, h2, h3, h4, h5, h6 {
		margin: 0 !important;
		line-height: $headerHeight !important;
		font-weight: 300;
		color: $colorWhite;
		white-space: nowrap;
		overflow: hidden;
		text-overflow: ellipsis;
	}
}
.navbar.position-fixed {
	top: 0;
	z-index: 1040;
}
.navbar.position-absolute {
	z-index: 1040;
}
.navbar.navbar-small {
	height: unset;

	h1, h2, h3, h4, h5, h6 {
		padding: 0;
		line-height: unset !important;
		font-size: 1.75rem;
	}
}
.nav {
	background-color: $colorSecondary;
}
.nav-pills .nav-link {
	border-radius: 0;
}
.nav-pills .nav-link.active {
	background-color: $colorPrimary;
}


// Sidebar
.sidebar {
	height: 100vh;
	background: $gradientVertical;
	box-shadow: $shadowLarge;
	z-index: 1040;
}
.sidebarContent {
	width: 100%;
	height: 100%;
	position: relative;
	overflow: auto;
	padding: 10px;

	hr {
		margin: 1rem;
		border-color: $colorWhite;
	}
}
.sidebarContainer {
	top: 0;
	width: 100vw;
	height: 100vh;
	position: fixed;
	z-index: 1050;
}
.sidebarOutside {
	height: 100vh;
}
.logo {
	font-family: $fontTitle;
	color: $colorWhite;

	h1 {
		font-size: 2.25rem;
	}
}
.links {
	margin: 0 1rem;
	border-top: 1px solid $colorWhite;
}
.link {
	padding: 0.75rem 0.5rem;

	a {
		color: #FFFFFF !important;
	}

	a:hover {
		text-decoration: none;
	}

	h4 {
		margin: 0;
		font-weight: 300;
	}

	svg {
		margin: 0 1rem;
		vertical-align: bottom;
	}
}
.link + .link {
	//border-top: 1px solid $colorWhite;
}
.link:hover {
	background-color: #FFFFFF20;
}

// Bootstrap jumbotron
.contentPage .jumbotron:first-child {
	padding-top: calc(#{$headerHeight} - 10px);
}
.jumbotron {
	margin: 0;
	padding: 1rem 1.5rem;
	color: $colorWhite;
	background: $gradientSecondary;
	border-radius: 0;

	* {
		font-weight: 300;
	}

	p:last-child {
		margin: 0;
	}

	a {
		color: $colorPrimary;

	}

	a:hover {
		text-decoration: none;

		.btn {
			background-color: $colorOffWhite;
		}
	}

	.btn {
		color: $colorPrimary;
		background-color: $colorWhite;
	}

	.btn:hover {
		background-color: $colorOffWhite;
	}
}
.cover {
	width: 100vw;
	min-height: 100vh;
	padding: 2rem;
	background: $gradientVertical;

	hr {
		margin: 1rem 0;
		border-color: $colorWhite;
	}
}

// Bootstrap toasts
.toast {
	backdrop-filter: none;
	background-color: $colorWhite;
	border: none;
	border-left: 0.5rem solid $colorPrimary;
	border-radius: 0;
	opacity: 1 !important;
}
.toast:not(:last-child) {
	margin-bottom: 0.5rem;
}
.toast-header {
	background-color: $colorWhite;
	border: none;
	box-shadow: $shadowSmallDown;
}
.toast-body {
	padding: 0.5rem;
}

// Bootstrap alerts
.close {
	font-weight: 300;
	color: $colorOffWhite;
	text-shadow: none;
	opacity: 1;
}
.close:hover {
	color: $colorOffWhite;
}
.alert {
	padding: 0.5rem 1rem;
	border: none;
	border-radius: 0;

	.btn {
		top: 0;
		right: 0;
		padding: 0.5rem 0.75rem;
		position: absolute;
		background-color: transparent;
	}
}
.alert-dismissible {
	padding-right: 3rem;

	.close {
		padding: 0.5rem 1rem;
	}
}
.alert-success {
	color: $colorWhite;
	background: $gradientSuccess;
}
.alert-danger {
	color: $colorWhite;
	background: $gradientDanger;
}
.messages {
	position: fixed;
	left: 0;
	top: 0;
	padding: 1rem;
	width: 100%;
	z-index: 1060;
}

// Bootstrap badges
.badge {
	vertical-align: inherit;
	font-size: 85%;
	font-weight: 400;

	svg {
		vertical-align: bottom;
	}

	.btn {
		padding: 0;
		line-height: 1;
	}
}
.badge:not(.badge-pill) {
	border-radius: 2px;
}
.badge:not(:last-child) {
	margin-bottom: 0.25rem;
	margin-right: 0.25rem;
}
.badge-primary {
	background-color: $colorPrimary;
}

// Custom tag component, a wrapper for bootstrap's badge
.tagLarge {
	padding-top: 0.5rem;
	padding-bottom: 0.5rem;
	font-size: 1rem;
}
.tagClick:hover {
	box-shadow: $shadowSmall;
	cursor: pointer;
}

// Mentions, a variant of tag components
.mentions {
	background-color: $colorWhite;
	box-shadow: $shadowSmallDown inset;
}
.mention {
	padding: 0.1rem 0.5rem;
	color: $colorWhite;
	background-color: $colorPrimary;
	border-radius: 1rem;
}
.mention:not(:last-child) {
	margin-right: 0.25rem;
	margin-bottom: 0.25rem;
}
.mention:hover {
	color: $colorOffWhite;
	background-color: $colorSecondary;
	box-shadow: $shadowSmall;
}

// Bootstrap forms
.form-group {
	margin: 0;
}
.form-group:not(:last-child) {
	margin-bottom: 1rem;
}
.input-group {
	background-color: $colorWhite;
}
.form-control {
	padding: 0.375rem 0.5rem;
	border: none;
	border-radius: 0;
}
.form-control:focus {
	outline: 0;
	box-shadow: none;
}
.form-control-plaintext {
	padding: 0.375rem 0.5rem;
	color: $colorOffBlack;
	border: 0;
}
.form-control-plaintext:focus {
	outline: 0;
	box-shadow: none;
}
.form-control:disabled, .form-control[readonly] {
	background-color: transparent;
}
.form-control[readonly], .form-control-plaintext[readonly] {
	background-color: transparent; // Maybe do give this a distinct color
}
.custom-control-input {
	z-index: 1;
}
.custom-control-input:focus {
	outline: none;
}
.custom-control-input:focus ~ .custom-control-label::before {
	box-shadow: none;
}
.custom-control-input:checked ~ .custom-control-label::before {
	background-color: $colorPrimary;
}
.custom-control-input:not(:disabled):active ~ .custom-control-label::before {
	background-color: $colorSecondary;
}
.custom-control-label::before {
	border: none;
}

// Bootstrap buttons
.btn {
	border: 0;
	border-radius: 0;
	transition: none;
}
.btn:not(:disabled):not(.disabled):hover, .btn:not(:disabled):not(.disabled):focus, .btn:not(:disabled):not(.disabled):active {
	box-shadow: $shadowMedium;
}
.btn:disabled {
	background-color: $colorGray;
}
.btn:not(:disabled):not(.disabled):active:focus {
	box-shadow: initial;
}
.btn-primary {
	color: $colorWhite;
	background-color: $colorPrimary;
}
.btn-primary:not(:disabled):not(.disabled):hover, .btn-primary:not(:disabled):not(.disabled):focus, .btn-primary:not(:disabled):not(.disabled):active {
	color: $colorOffWhite;
	background-color: $colorSecondary;
}
.btn-danger {
	color: $colorWhite;
	background-color: $colorDanger;
}
.btn-danger:not(:disabled):not(.disabled):hover, .btn-danger:not(:disabled):not(.disabled):focus, .btn-danger:not(:disabled):not(.disabled):active {
	color: $colorOffWhite;
	background-color: $colorDangerAlternate;
}

// Custom button related components
.buttonFloating {
	bottom: 44px;
	right: 0;
	width: 3rem;
	height: 3rem;
	margin: 0.5rem;
	padding: 0;
	position: fixed;
	border-radius: 50%;
	z-index: 1030;
}
.buttonBar {
	background-color: $colorPrimary;
}
.buttonBarRound {
	.btn {
		border-radius: 50%;
	}
}
.buttonList {
	a, .btn {
		width: 100%;
		display: block;
	}

	a:not(:last-child) {
		margin-bottom: 1rem;
	}
}
.buttonWrapper {
	.btn:hover, .btn:not(:disabled):not(.disabled):hover, .btn:active, .btn:not(:disabled):not(.disabled):active, .btn:focus, .btn:not(:disabled):not(.disabled):focus {
		color: $colorOffWhite;
		background-color: transparent;
		box-shadow: none;
	}
}

// QR code
.qrCode {
	max-height: 50vh;
}

// Directory viewer
.directoryNode {
	margin: 0 0 0 0.5rem;

	.dataItem, .dataToggle {
		margin: 0;
	}

	.directoryNode .toast-body {
		padding: 0.25rem 0.5rem;
	}

	.directoryNode:last-of-type > .dataItem .toast-body, .directoryNode:last-of-type > .dataToggle .toast-body {
		padding-bottom: 0.5rem;
	}
}
.directoryTopLevel {
	margin: 0.5rem 0;
}
.directoryTopLevel:last-child .toast-body {
	padding-bottom: 0.5rem;
}
.directoryNodeDisabled {
	color: $colorDisabled;
}

// Comments
.commentThread:not(:last-child) {
	//margin-bottom: 1rem;
}
.commentThread > *:not(:last-child) {
	box-shadow: $shadowInsetSmallDown;
}

.commentCreator {
	background-color: $colorWhite;
}
.commentCreatorLarge {
	.btn {
		width: 3rem;
		height: 3rem;
	}

	.form-control {
		height: 3rem;
	}
}
.commentCreatorRound {
	border-radius: 1.5rem;

	.btn:first-of-type {
		border-top-left-radius: 1.5rem;
		border-bottom-left-radius: 1.5rem;
	}

	.btn:last-of-type {
		// A round comment creator might have another child, the mention suggestions.
		// If this is the case, we want the lower right corner not to be rounded.
		// Bootstrap will do that automatically if the input append is not the last child.
		// This will however also overwrite the top right corner, which we don't want.
		border-top-right-radius: 1.5rem;
		border-bottom-right-radius: 1.5rem;
	}

	.input-group-append:not(:last-child) > .btn:last-of-type {
		border-top-right-radius: 1.5rem;
	}

	.input-group-append:not(:last-child) > .btn {
		border-bottom-left-radius: 0;
	}

	.mentions {
		padding-left: 1rem;
		padding-right: 1rem;
	}
}