{
    "env": {
        "browser": true,
        "es2021": true,
        "node": true
    },
    "extends": [
        "eslint:recommended",
        "plugin:react/recommended",
        "plugin:@typescript-eslint/recommended",
        "plugin:@typescript-eslint/recommended-requiring-type-checking"
    ],
    "parser": "@typescript-eslint/parser",
    "parserOptions": {
        "ecmaFeatures": {
            "jsx": true
        },
        "ecmaVersion": 12,
        "sourceType": "module",
        "tsconfigRootDir": ".",
        "project": [ "./tsconfig.json", "./client/tsconfig.json" ]
    },
    "plugins": [
        "react",
        "@typescript-eslint",
        "unused-imports"
    ],
    "rules": {
        // Imports
        "unused-imports/no-unused-imports": "warn",
        "no-duplicate-imports": "error",
        "@typescript-eslint/no-require-imports": "error",

        // Variables
        "@typescript-eslint/no-unused-vars": "off",
        "unused-imports/no-unused-vars": [
            "warn",
            { "varsIgnorePattern": "^_", "argsIgnorePattern": "^_" }
        ],
        "no-var": "error",
        "prefer-const": "warn",

        // Operators
        "no-mixed-operators": "warn",
        "eqeqeq": [
            "error",
            "smart"
        ],

        // Logic
        "no-lonely-if": "error",
        "@typescript-eslint/no-unnecessary-boolean-literal-compare": "error",

        // More concise/expressive alternatives
        "@typescript-eslint/prefer-for-of": "warn",
        "@typescript-eslint/prefer-includes": "warn",
        "@typescript-eslint/prefer-string-starts-ends-with": "warn",

        // Likely errors
        "@typescript-eslint/promise-function-async": "error",
        "@typescript-eslint/switch-exhaustiveness-check": "error",

        // Typing
        "@typescript-eslint/explicit-module-boundary-types": "off",

        // Style - Naming
        "camelcase": [
            "error",
            {
                "ignoreDestructuring": true,
                "ignoreImports": true,
                "ignoreGlobals": true
            }
        ],
        "new-cap": [
            "error",
            { "capIsNewExceptions": ["Router", "IdentityProvider", "ServiceProvider"] }
        ],

        // Style - File spacing (also set in .editorconfig)
        "indent": [
            "error",
            4
        ],
        "no-trailing-spaces": "warn",
        "eol-last": "warn",

        "max-len": [
            "warn",
            {
                "code": 120,
                "ignoreTrailingComments": true,
                "ignoreUrls": true,
                "ignoreStrings": true,
                "ignoreTemplateLiterals": true,
                "ignoreRegExpLiterals": true
            }
        ],

        // Style - Semicolons
        "semi": [
            "error",
            "always"
        ],
        "semi-style": "error",
        "semi-spacing": "error",

        // Style - Commas
        "comma-spacing": "error",
        "comma-style": "error",

        // Style - General spacing
        "key-spacing": "error",
        "object-curly-spacing": "error",
        "array-bracket-spacing": "error",
        "keyword-spacing": "error",
        "func-call-spacing": "error",
        "arrow-spacing": "error",
        "@typescript-eslint/type-annotation-spacing": "error",

        // Style - Braces and parentheses
        "brace-style": [
            "error",
            "1tbs",
            { "allowSingleLine": true }
        ],
        "arrow-parens": [
            "error",
            "as-needed"
        ],
        "arrow-body-style": [
            "error",
            "as-needed"
        ],

        // Style - Strings
        "quotes": [
            "error",
            "double",
            { "avoidEscape": true }
        ],

        // TODO: There are a lot of these in here, they should be fixed at some point
        "@typescript-eslint/no-floating-promises": "off"
    },
    "settings": {
        "react": {
            "version": "detect"
        }
    }
}
